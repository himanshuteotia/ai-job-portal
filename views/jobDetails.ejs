<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= job.companyName %> - Job Details</title>
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            background-color: #f4f4f4;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        .job-header {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .job-content {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }
        .main-content, .right-panel {
            flex: 1;
            min-width: 300px;
        }
        .job-section {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .tech-tag {
            display: inline-block;
            background-color: #e0e0e0;
            padding: 5px 10px;
            border-radius: 20px;
            margin-right: 10px;
            margin-bottom: 10px;
            font-size: 0.9em;
        }
        .btn {
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.3s;
        }
        .btn-primary {
            background-color: #007bff;
            color: #fff;
        }
        .btn-secondary {
            background-color: #6c757d;
            color: #fff;
        }
        .btn-danger {
            background-color: #dc3545;
            color: #fff;
        }
        .status-badge {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.9em;
            font-weight: bold;
        }
        .applied { background-color: #ffc107; }
        .interviewing { background-color: #17a2b8; }
        .offered { background-color: #28a745; }
        .rejected { background-color: #dc3545; color: #fff; }
        #linked-notes-editor {
            height: 300px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <a href="/jobs" class="btn btn-secondary"><i class="fas fa-arrow-left"></i> Back to Jobs</a>
        
        <div class="job-header">
            <h1><%= job.companyName %></h1>
            <div class="job-meta">
                <span class="job-meta-item"><i class="fas fa-calendar-alt"></i> Applied: <%= job.dateApplied.toLocaleDateString() %></span>
                <span class="job-meta-item"><i class="fas fa-briefcase"></i> Experience: <%= job.experienceRequired %> years</span>
                <span class="job-meta-item"><i class="fas fa-tasks"></i> Status: <span class="status-badge <%= job.status.toLowerCase() %>"><%= job.status %></span></span>
            </div>
        </div>
        
        <div class="job-content">
            <div class="main-content">
                <div class="job-section">
                    <h2>Job Description</h2>
                    <p><%= job.jobDescription %></p>
                </div>
                
                <div class="job-section">
                    <h2>Technologies</h2>
                    <% job.technologies.forEach(tech => { %>
                        <span class="tech-tag"><%= tech %></span>
                    <% }) %>
                </div>
                
                <div class="job-section">
                    <h2>Comments</h2>
                    <% job.comments.forEach(comment => { %>
                        <div class="comment-item">
                            <p><%= comment.content %></p>
                            <small><%= comment.createdAt.toLocaleString() %></small>
                        </div>
                    <% }) %>
                    
                    <h3>Add a Comment</h3>
                    <form id="comment-form">
                        <textarea name="content" rows="4" required style="width: 100%; padding: 10px;"></textarea>
                        <button type="submit" class="btn btn-primary">Add Comment</button>
                    </form>
                </div>
            </div>
            
            <div class="right-panel">
                <div class="job-section">
                    <h2>Linked Notes</h2>
                    <div id="linked-notes-editor"></div>
                    <button id="link-notes-btn" class="btn btn-secondary">Link Notes</button>
                </div>
                
                <div class="job-section">
                    <h2>Actions</h2>
                    <a href="/jobs/<%= job._id %>/edit" class="btn btn-primary">Edit Job</a>
                    <button id="delete-job-btn" class="btn btn-danger">Delete Job</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Initialize Quill editor
        var quill = new Quill('#linked-notes-editor', {
            theme: 'snow',
            readOnly: true // Make it read-only initially
        });

        // Function to render linked notes in Quill
        function renderLinkedNotes() {
            let notesContent = '';
            <% if (job.relatedNotes && job.relatedNotes.length > 0) { %>
                <% job.relatedNotes.forEach(note => { %>
                    notesContent += '<h3>Note</h3>';
                    notesContent += '<p><%= note.content %></p>';
                    <% if (note.createdAt) { %>
                        notesContent += '<small><%= note.createdAt.toLocaleString() %></small>';
                    <% } else { %>
                        notesContent += '<small>Date not available</small>';
                    <% } %>
                    notesContent += '<hr>';
                <% }) %>
            <% } else { %>
                notesContent = '<p>No related notes found.</p>';
            <% } %>
            quill.root.innerHTML = notesContent;
        }

        // Call the function to render notes when page loads
        renderLinkedNotes();

        document.getElementById('comment-form').addEventListener('submit', function(e) {
            e.preventDefault();
            const content = this.content.value;
            fetch('/jobs/<%= job._id %>/comments', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ content }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error adding comment');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error adding comment');
            });
        });

        document.getElementById('delete-job-btn').addEventListener('click', function() {
            if (confirm('Are you sure you want to delete this job?')) {
                fetch('/jobs/<%= job._id %>', {
                    method: 'DELETE',
                })
                .then(response => {
                    if (response.ok) {
                        window.location.href = '/jobs';
                    } else {
                        throw new Error('Failed to delete job');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to delete job');
                });
            }
        });

        document.getElementById('link-notes-btn').addEventListener('click', function() {
            // Implement the logic to open a modal or navigate to a page for linking notes
            alert('Link notes functionality to be implemented');
            // After linking notes, you would typically fetch the updated job data
            // and call renderLinkedNotes() again to update the Quill editor
        });
    </script>
</body>
</html>